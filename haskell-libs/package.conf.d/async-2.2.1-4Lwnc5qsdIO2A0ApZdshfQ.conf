name: async
version: 2.2.1
id: async-2.2.1-4Lwnc5qsdIO2A0ApZdshfQ
key: async-2.2.1-4Lwnc5qsdIO2A0ApZdshfQ
license: BSD3
copyright: (c) Simon Marlow 2012
maintainer: Simon Marlow <marlowsd@gmail.com>
homepage: https://github.com/simonmar/async
synopsis: Run IO operations asynchronously and wait for their results
description:
    This package provides a higher-level interface over
    threads, in which an @Async a@ is a concurrent
    thread that will eventually deliver a value of
    type @a@.  The package provides ways to create
    @Async@ computations, wait for their results, and
    cancel them.
    .
    Using @Async@ is safer than using threads in two
    ways:
    .
    * When waiting for a thread to return a result,
    if the thread dies with an exception then the
    caller must either re-throw the exception
    ('wait') or handle it ('waitCatch'); the
    exception cannot be ignored.
    .
    * The API makes it possible to build a tree of
    threads that are automatically killed when
    their parent dies (see 'withAsync').
category: Concurrency
author: Simon Marlow
exposed: True
exposed-modules:
    Control.Concurrent.Async
abi: 174591af3f516c695dba3783531d3ff5
trusted: False
import-dirs: /usr/local/tidali/haskell-libs/async-2.2.1-4Lwnc5qsdIO2A0ApZdshfQ
library-dirs: /usr/local/tidali/haskell-libs/async-2.2.1-4Lwnc5qsdIO2A0ApZdshfQ
dynamic-library-dirs: /usr/local/tidali/haskell-libs
data-dir: /home/alex/src/tidali/.cabal-sandbox/share/x86_64-linux-ghc-8.0.2/async-2.2.1
hs-libraries: HSasync-2.2.1-4Lwnc5qsdIO2A0ApZdshfQ
depends:
    base-4.9.1.0 hashable-1.2.7.0-3hg2TEghlsEJmDAYciLYpr
    stm-2.4.5.0-JxMPI9z2LO82UTKmT3QQt6
haddock-interfaces: /home/alex/src/tidali/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.0.2/async-2.2.1/html/async.haddock
haddock-html: /home/alex/src/tidali/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.0.2/async-2.2.1/html
